Hai kembali lagi untuk belajar..
Hari ini kita akan menyimpan codingan ke Repository online, lets get !

repo yang terkenal bitbucket, github, dan gitlab
pada module ini kita akan menggunakan repo bitbucket

Step 1
- Buat Repo dengan klik btn "Create Repo"
- Lalu memberi nama Repo dan unceklis bila Repo bersifat umum 
- atau biarkan saj ceklisnya bila Repo bersifat Private

Step 2 - Clone projek ke local (Laptop kita )
- a. Buka terminal dan masuk ke projek
- Untuk pertama dalam membuat projek ada baiknya kita cek lebih dulu, apakah projek yg baru dibuat tsb sudah di inisiasi ke repo online ?
  b. cara cek nya kita ketikan -> git status
     bila tampil pesan "not a git repository....." berarti projek kita belum terhubung ke Repo online
- Karena Repo kita belum terinisialisasi dg repo online 
  c. maka kita ketika -> git init
     git init dimaksud untuk inisialisasi projek kita ke git, agar setiap perubahannya tercatat oleh git.
     dg run perintah git init secara default kita akan dibuatkan branch master.
  d. lalu kita cek lagi dg -> git status
     nah disini akan tampil folder apa saja (berwarna merah) yang perubahannya akan terekam di git kita.
     kecuali folder gitignore , perubahan apapun pd git ignore tidak akan terekam pada git
- selanjutnya kita koneksikan git kita dengan repo online (bitbucket atau remote url)
  kita menyalin url repo kita pada website repository di profile kita lalu pilih clone dansalin url https nya aja
  e. ketik perintah git remote add origin urlRepoKita ,pada terminal kita.
- lalu kita masukan semua kodingan kita atau semua perubahan kodingan kita di repo online
  ibaratnya kita punya ember kosong sbg media untuk menuangkan semua kodingan kita ke repo online.
  Nah sebelum semua peruabahan code kita di upload ke repo online maka kita tampung sulu perubahan code tsb pada ember kosong tadi.
  f. ketikan perintah -> git add .
  g. lalu cek lagi dg perintah -> git status
     semua nama folder yg tampil akan berwarna hijau. artinya terdapat perubahan dari merah (saat awal git init) ke warna hijau (setalah git add . )
- sebelum upload ke repo kita berikan nama dan deskripsi pada ember tsb.
  deskripsi bisa kita buat se simple mungkin atau se detail mungkin, untuk mempermudah tracking perunahan pada projek kita.
  h. ketikan perintah git commit -m "detail deskripsi" -> lalu enter (untuk deskripsi yg detail kita gunakan shif+enter)
  i. setelah selesai membuat deskripsi tekan enter untuk menyimpan
     akan tampil perubahan folder dengan tulisan create mode, pada tahap ini kita siap upload perubahan coding kita ke repo online
- lalu kita simpan ember perubahan tadi di repo online kita
  peyimpanan peruabahan codingan tadi tersimpan di branch master
  j. ketik perintah -> git push origin master
     bila eror kita bisa menggunakan git push origin master -f atau git push origin master --force
     
Step 3 fungsi lain dari git status
- sesuai namanya git status biasa kita gunakan untuk melihat perubahan atau kondisi terkini file.
- dengan ketik git status setelah melakukan perubahan, umumnyanakan tampil modified file
  yg artinya ada sebuah file yang telah mengalami perubahan. lalu bagaimana melihat detail perubahan dg cmd ?
- untuk melihat detail perubahan kita bisa ketik perintah git diff app.js (Atau file yang mengalami perubahan)
  akan tampil code yang berwarna merah memiliki arti itu code yg terhapus.
  
Step 4. Melihat update dari vscode
- kita bisa klik icon source control disebelah kiri
- lalu klik 
- kita akan ditampilkan 2 file. file yg mengalami perubahan dan file sebelum dirubah
  
Step 5 Melakukan perubahan terus menerus
- setelah berhasil melakukan setup ke repo online tentunya secara berkala kita pasti melkaukan perubahan pada aplikasi/projek kita
  lalu bagaimana alur untuk mengelola code selanjutnya ?
  a. setiap selesai melakukan update code pada aplikasi kita, maka ketik perintah git add .
     git add . ini dg tujuan menyimpan update pada ember
  b. ketik perintah git status agar kita mengetahui status code, apakh sudah dimasukan ke ember atau belum ?
  c. jika yakin sudah, maka kita beri commit dengan git commit -m "deskripsi perubahan"
  d. lalu kirim ke repo dg git push origin master (atau tambhakan -f atau --force)
  
  SUMMARY:
  - git init (dibuatkan branch master) -> git status
  - git remote add origin urlRepoKita
  - git add .  (menampung semua perubahan yg terjadi pada projek)
  - git commit (memberi deskripsi terhadap perubahan)
  - git push (mengirim perubahan)
  - git pull origin master (untuk ambil perubahan, dan merge ke main, update folder)
  - git fetch origin master (untuk ambil perubahan)
